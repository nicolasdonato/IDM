package ArduinoML.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum Operator {
  ne("ne", "<>"),
  le("le", "<="),
  ge("ge", ">="),
  gt("gt", ">"),
  lt("lt", "<"),
  eq("eq", "==");

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public static List<Operator> getConstants() {
    List<Operator> list = ListSequence.fromList(new LinkedList<Operator>());
    ListSequence.fromList(list).addElement(Operator.ne);
    ListSequence.fromList(list).addElement(Operator.le);
    ListSequence.fromList(list).addElement(Operator.ge);
    ListSequence.fromList(list).addElement(Operator.gt);
    ListSequence.fromList(list).addElement(Operator.lt);
    ListSequence.fromList(list).addElement(Operator.eq);
    return list;
  }

  public static Operator getDefault() {
    return Operator.eq;
  }

  public static Operator parseValue(String value) {
    if (value == null) {
      return Operator.getDefault();
    }
    if (value.equals(Operator.ne.getValueAsString())) {
      return Operator.ne;
    }
    if (value.equals(Operator.le.getValueAsString())) {
      return Operator.le;
    }
    if (value.equals(Operator.ge.getValueAsString())) {
      return Operator.ge;
    }
    if (value.equals(Operator.gt.getValueAsString())) {
      return Operator.gt;
    }
    if (value.equals(Operator.lt.getValueAsString())) {
      return Operator.lt;
    }
    if (value.equals(Operator.eq.getValueAsString())) {
      return Operator.eq;
    }
    return Operator.getDefault();
  }

  private String myValue;

  Operator(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getValue() {
    return this.myValue;
  }
}
